services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    env_file: .env
    volumes:
      - ./backend:/app
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres_test:
        condition: service_healthy
    networks:
      - app_network
  locust:
    image: locustio/locust
    volumes:
      - ./backend/tests/locust_tests:/mnt/locust
    environment:
      - LOCUST_LOCUSTFILE=/mnt/locust/locustfile.py
      - LOCUST_HOST=http://backend:${SERVER_PORT}
    ports:
      - "8089:8089"
    depends_on:
      - backend
    networks:
      - app_network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - app_network

  postgres:
    image: postgres:17-alpine
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app_network

  postgres_test:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: isp_compare_test
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d isp_compare_test" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: